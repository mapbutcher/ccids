View(state_accounts)
sa2_molten <- melt(SA2,id=1:5)
View(sa2_molten)
View(sa2_molten)
install.packages("dplyr")
x <- matrix(rnorm(100), 10, 10)
mean(colMeans(x))
colMeans(x)
mean(colMeans(x))
library("dplyr")
library(dplyr)
x %>% colMeans %>% mean
tax.data <- read.csv("synthetic_tax.csv")
tax.data %>% group_by(Gender) %>%
summarise(mean.income = mean(Taxable_Income))
View(tax.data)
View(SA.m)
View(SA.m)
View(state_account_molten)
View(state_account_molten)
mutate(foo = c(NA, diff(log(value))))
mutate(foo = c(NA, diff(log("value"))))
mutate(foo = c(NA, diff(log(value))))
state_account_molten.data %>%
group_by(variable) %>%
mutate(foo = c(NA, diff(log(value))))
state_account_molten %>%
group_by(variable) %>%
mutate(foo = c(NA, diff(log(value))))
state_account_molten %>%
group_by(variable) %>%
mutate(foo = c(NA, diff(log(value)))) %>% as.data.frame
state_account_molten %>%
group_by(variable) %>%
mutate(foo = c(NA, diff(log(value)))) %>%
as.data.frame %>%
select(max(foo, na.rm = T))
state_account_molten %>%
group_by(variable) %>%
mutate(foo = c(NA, diff(log(value)))) %>%
select(max(foo, na.rm = T))
state_account_molten %>%
group_by(variable) %>%
mutate(foo = c(NA, diff(log(value)))) %>% as.data.frame
state_account_molten %>%
group_by(variable) %>%
mutate(compound_growth = c(NA, diff(log(value)))) %>% as.data.frame
state_account_molten %>%
group_by(variable) %>%
mutate(compound_growth = c(NA, diff(log(value)))) %>% as.data.frame %>%
group_by(Date)
state_account_molten %>%
group_by(variable) %>%
mutate(compound_growth = c(NA, diff(log(value)))) %>% as.data.frame %>%
filter(max(foo, na.rm = T))
state_account_molten %>%
group_by(variable) %>%
mutate(compound_growth = c(NA, diff(log(value)))) %>% as.data.frame %>%
filter(max(compound_growth, na.rm = T))
state_account_molten %>%
group_by(variable) %>%
mutate(compound_growth = c(NA, diff(log(value)))) %>% as.data.frame
foo  <- state_account_molten %>%
group_by(variable) %>%
mutate(compound_growth = c(NA, diff(log(value)))) %>% as.data.frame
foo
??max
x = max(foo$compound_growth, na.rm = T)
x
select (max(foo$compound_growth, na.rm = T))
tax <- read.csv("synthetic_tax.csv")
tax %>% group_by(Gender) %>%
mutate(decile=ntile(Taxable_Income,10)) %>%
group_by(Gender,decile)
foo  <- state_account_molten %>%
group_by(variable) %>%
mutate(compound_growth = c(NA, diff(log(value)))) %>% as.data.frame
foo  <- state_account_molten %>%
group_by(variable) %>%
mutate(compound_growth = c(NA, diff(log(value)))) %>% as.data.frame
state_account_molten %>%
group_by(variable) %>%
mutate(compound_growth = c(NA, diff(log(value)))) %>% as.data.frame
??filter
sa_compound <- state_account_molten %>%
group_by(variable) %>%
mutate(compound_growth = c(NA, diff(log(value))))
filter(sa_compound, max(compound_growth, na.rm = T))
sa_compound <- state_account_molten %>%
group_by(variable) %>%
mutate(compound_growth = c(NA, diff(log(value)))) %>%
filter(!is.na(compound_growth))
sa_compound
sa_compound <- state_account_molten %>%
group_by(variable) %>%
mutate(compound_growth = c(NA, diff(log(value)))) %>% #give the initial value of NA
summarise(max_compound_growth = max(compound_growth, na.rm = T))
sa_compound
state_account_molten %>%
group_by(variable) %>%
mutate(compound_growth = c(NA, diff(log(value)))) %>% #give the initial value of NA
summarise(max_compound_growth = max(compound_growth, na.rm = T)) %>% arrange(max_compound_growth)
View(sa_compound)
f <- function(x){
s <- sum(x)
n <- length(x)
output <- s/n
}
f(1,2,3)
f(c(1,2,3))
f(c(1,2,3))
d <- f(c(1,2,3))
d
d <- f(c(1,2,3))
d
f <- function(x){
browser()
s <- sum(x)
n <- length(x)
output <- s/n
}
d
f <- function(x){
browser()
s <- sum(x)
n <- length(x)
s/n
}
d
f(c(10,10))
d <- f(c(1,2,3))
f <- function(x){
#browser()
s <- sum(x)
n <- length(x)
s/n #last line gets returned
}
d <- f(c(1,2,3))
d
f(c(1,2,3))
f <- function(x){
browser()
s <- sum(x)
n <- length(x)
s/n #last line gets returned
}
f(c(1,2,3))
f1 <- function (a,b){
#browser()
out <- ifelse(x>y, x, NA)
out
}
f1(1:10,5)
f1 <- function (a,b){
#browser()
out <- ifelse(a>b, a, NA)
out
}
f1(1:10,5)
librar(stringer)
library(stringer)
install.packages("stringer")
library(stringer)
install.packages(stringer)
install.packages("stringer")
state_account_molten<- state_account_molten %>%
mutate(Year  = str_extract(Date,"[0-9]{4}") %>% as.numeric)
library(stringer)
install.packages("stringer")
install.packages("Stringer")
install.packages("Stringr")
install.packages("stringr")
library(stringr)
GDP <- state_account_molten %>%
mutate(Year  = str_extract(Date,"[0-9]{4}") %>% as.numeric) %>% group_by(Year) %>%
summarise(GDP = sum(value))
GDP <- state_account_molten %>%
mutate(Year  = str_extract(Date,"[0-9]{4}") %>% as.numeric) %>% group_by(Year) %>%
summarise(GDP = sum(value))
GDP <- state_account_molten %>%
mutate(Year = str_extract(Date,"[0-9]{4}") %>% as.numeric) %>% group_by(Year) %>%
summarise(GDP = sum(value))
GDP
GDP <- state_account_molten %>%
mutate(Year = str_extract(Date,"[0-9]{4}") %>%
as.numeric) %>% group_by(Year) %>%
summarise(GDP = sum(value))
GDP <- state_account_molten %>%
mutate(Year = str_extract(Date,"[0-9]{4}") %>% as.numeric) %>% group_by(Year) %>%
summarise(GDP = sum(value))
GDP <- state_account_molten %>%
mutate(Year = str_extract(Date,"[0-9]{4}") %>% as.numeric) %>% group_by(Year) %>%
summarise(GDP = sum(value)) %>%
mutate(GDP_growth = c(NA, diff(log(GDP))))
GDP <- state_account_molten %>%
mutate(Year = str_extract(Date,"[0-9]{4}") %>% as.numeric) %>% group_by(Year) %>%
summarise(GDP = sum(value)) %>%
mutate(GDP_growth = c(NA, diff(log(GDP))))
View(state_account_molten)
GDP <- state_account_molten %>%
mutate(Year = str_extract(Date,"[0-9]{4}") %>% as.numeric) %>% group_by(Year) %>%
summarise(GDP = sum(value)) %>%
mutate(GDP_growth = c(NA, diff(log(GDP))))
library(dplyr)
GDP <- state_account_molten %>%
mutate(Year = str_extract(Date,"[0-9]{4}") %>% as.numeric) %>% group_by(Year) %>%
summarise(GDP = sum(value)) %>%
mutate(GDP_growth = c(NA, diff(log(GDP))))
GDP
superreturns <- SA2.melt %>% filter(!is.na(value)) %>%
mutate(Year = str_extract(variable, "[0-9]{4}") %>% as.numeric) %>%
group_by(Year) %>%
summarise(Average_returns = (1+mean(value)/100)^12-1)
superreturns <- SA2.m %>% filter(!is.na(value)) %>%
mutate(Year = str_extract(variable, "[0-9]{4}") %>% as.numeric) %>%
group_by(Year) %>%
summarise(Average_returns = (1+mean(value)/100)^12-1)
View(SA2.m)
View(SA2.m)
View(SA2.m)
View(sa2_molten)
superreturns <- sa2_molten %>% filter(!is.na(value)) %>%
mutate(Year = str_extract(variable, "[0-9]{4}") %>% as.numeric) %>%
group_by(Year) %>%
summarise(Average_returns = (1+mean(value)/100)^12-1)
output <- left_join(GDP, superreturns)
plot(output$GDP_growth, output$Average_returns)
??glmnet
install.packages(c("rpart", "randomForest", "rpart.plot", "AUC", "AER"))
# Load libraries
library(AUC); library(AER);
# Load data
data(Affairs)
# Create dependent variable
Affairs$morethan0 <- ifelse(Affairs$affairs>0, 1, 0)
# Estimate logit model
mod <- glm(morethan0~ . - affairs, data = Affairs, family = binomial(link = "logit"))
# Create some predictions from the model
predictions <- predict(mod, type = "response")
# Plot the predictions and the ROC curve
hist(predictions)
summary(mod)
predictions
mod
summary(mod)
roc(predictions = predictions, labels = factor(Affairs$morethan0)
roc(predictions = predictions, labels = factor(Affairs$morethan0))
roc(predictions = predictions, labels = factor(Affairs$morethan0))
auc(roc(predictions = predictions, labels = factor(Affairs$morethan0)))
plot(roc(predictions = predictions, labels = factor(Affairs$morethan0)), "ROC for Affairs")
auc(roc(predictions = predictions, labels = factor(Affairs$morethan0)))
plot(roc(predictionsfoo = predictions, labels = factor(Affairs$morethan0)), "ROC for Affairs")
#area under the curve
plot(roc(predictionsfoo = predictions, labels = factor(Affairs$morethan0)), "ROC for Affairs")
plot(roc(predictions = predictions, labels = factor(Affairs$morethan0)), "ROC for Affairs")
plot(roc(predictions = predictionsfoo, labels = factor(Affairs$morethan0)), "ROC for Affairs")
#area under the curve
plot(roc(predictions = predictionsfoo, labels = factor(Affairs$morethan0)), "ROC for Affairs")
library(glmnet)
mu <- 5 #mean
sigma <- 2 #standard deviation
y <- rnorm(200, mu, sigma)
Y <- Affairs$morethan0
X <- model.matrix(~ . - affairs, data = Affairs)
X <- model.matrix(~ . - affairs - morethan0, data = Affairs)
View(X)
View(X)
rglm <- cv.glmnet(x=X, y= y, nfolds = 20, family="binominal")
rglm <- cv.glmnet(x=X, y= y, nfolds = 20, family="binomial")
rglm <- cv.glmnet(x=X, y= y, nfolds = 100, family="binomial")
rglm <- cv.glmnet(x=X, y= y, nfolds = 200, family="binomial")
rglm <- cv.glmnet(x=X, y= y, nfolds = 600, family="binomial")
rglm <- cv.glmnet(x=X, y= y, nfolds = 601, family="binomial")
rglm <- cv.glmnet(x=X, y= y, nfolds = 601, family="binomial")
rglm <- cv.glmnet(x=X, y= y, nfolds = 601, family="binomial")
rglm <- cv.glmnet(x=X, y= y, nfolds = 601, family="binomial")
```
rglm <- cv.glmnet(x=X, y= y, nfolds = 601, family="binomial")
library(glmnet)
Y <- Affairs$morethan0
X <- model.matrix(~ . - affairs - morethan0, data = Affairs)
rglm <- cv.glmnet(x=X, y= y, nfolds = 601, family="binomial")
rglm <- cv.glmnet(x=X, y= y, nfolds = 200, family="binomial")
```
rglm <- cv.glmnet(x=X, y= y, nfolds = 200, family="binomial")
rglm <- cv.glmnet(y= y,x=X, nfolds = 200, family="binomial")
rglm <- cv.glmnet(y= y,x=X, nfolds = 200, family="binomial")
rglm <- cv.glmnet(y=y, x=X, nfolds = 200, family="binomial")
library(glmnet)
y <- Affairs$morethan0
x <- model.matrix(~ . - affairs - morethan0, data = Affairs)
rglm <- cv.glmnet(y=y, x=X, nfolds = 200, family="binomial")
plot(rglm)
rglm_pred <- predict(rglm, s = "lambda.min",newx = x)
hist(rglm_pred)
rglm_pred <- predict(rglm, s = "lambda.min",newx = x, type="response")
hist(rglm_pred)
plot(rglm)
plot(roc(predictions = rglm_pred, labels = factor(Affairs$morethan0)))
AUC::auc(roc(predictions = rglm_pred, labels = factor(Affairs$morethan0)))
plot(rglm)
rglm1 <-glmnet(y=y, x=X, nfolds = 200, family="binomial")
plot(rglm1)
rglm1 <-glmnet(y=y, x=X, nfolds = 200, family="binomial")
rglm1 <-glmnet(y=y, x=X,family="binomial")
plot(rglm1)
x2
x2 <- sample(c(0,1), 100, replace = T)
y <- rnorm(100, # Sample size
a + b*x1 + c*x2, # The conditional mean
sigma)
a <- 5
b <- 3
c <- 6
sigma <- 4
# Create some features
x1 <- rnorm(100) #normal distribution with 100 observations
x2 <- sample(c(0,1), 100, replace = T)
# "Generate" your data
y <- rnorm(100, # Sample size
a + b*x1 + c*x2, # The conditional mean
sigma)
df <- data.frame(y,x1,x2)
df
View(df)
library(randomForest)
# Run the model
rfmod <- randomForest(as.factor(morethan0) ~ . - affairs, data = Affairs, ntree = 5000)
# Generate predictions
pred_rf <- predict(rfmod, type = "prob")
# GLM roc
plot(roc(predictions, as.factor(Affairs$morethan0)))
# RF roc
plot(roc(pred_rf[,2], as.factor(Affairs$morethan0)), col = "red")
library(rpart);library(rpart.plot)
tree <- rpart(affairs ~ . - morethan0, data = Affairs)
rpart.plot()
rpart.plot(tree)
rpart.plot(tree,extra = 1)
tree <- rpart(affairs ~ . - morethan0, data = Affairs,
control = rpart.control(maxdepth = 3))
rpart.plot(tree,extra = 1)
tree <- rpart(affairs ~ . - morethan0, data = Affairs)#last param trims the tree
rpart.plot(tree,extra = 1)
Affairs$morethan0 <- ifelse(Affairs$affairs>0, 1, 0)
Affairs$morethan0
View(Affairs)
View(Affairs)
mod
??glm
mod
summary(mod)
predictions <- predict(mod, type = "response")
predictions
hist(predictions)
plot(roc(predictions = predictions, labels = factor(Affairs$morethan0)), "ROC for Affairs")
library(dplyr); library(AER)
data("CigarettesSW")
CigarettesSW <- CigarettesSW %>%
mutate(rprice = price/cpi, # Real price adjusted for inflation
rincome = income/population/cpi, # Real per-capital income
tdiff = (taxs - tax)/cpi)
lm1 <- lm(log(packs)~log(price), data=CigarettesSW)
summary(lm1)
lm1 <- lm(log(packs)~log(rprice), data=CigarettesSW)
summary(lm1)
lm2 <- lm(log(packs)~log(rprice) + rincome, data=CigarettesSW)
summary(lm2)
lm3 <- lm(log(packs)~log(rprice) + rincome + year, data=CigarettesSW)
summary(lm3)
load("super_data.RData")
library(ggplot2); library(dplyr); library(ggvis)
load("super_data.RData")
install.packages("ggvis")
install.packages("ggmap")
load("super_data.RData")
library(ggplot2); library(dplyr); library(ggvis)
load("super_data.RData")
load("super_data.RData")
library(ggplot2); library(dplyr); library(ggvis)
library(lme4)
apra.ss <- apra.sr.full %>% filter(!is.na(Average.fees))
apra.ss <- apra.sr.full %>% filter(!is.na(Average.fees))
apra.ss %>% ggplot(aes(x=Year, y=Rate_ofreturn, colour=Year))+geom_point(alpha=0.5)
apra.ss <- apra.sr.full %>% filter(!is.na(Average.fees))
apra.ss %>% ggplot(aes(x=Year, y=Rate_of_return, colour=Year))+geom_point(alpha=0.5)
apra.ss %>% ggplot(aes(x=Year, y=Rate_of_return, colour=as.Factor(Year)))+geom_point(alpha=0.5)
apra.ss %>% ggplot(aes(x=Year, y=Rate_of_return, colour=as.factor(Year)))+geom_point(alpha=0.5)
apra.ss %>% ggplot(aes(x=Average.fees, y=Rate_of_return, colour=as.factor(Year)))+geom_point(alpha=0.5)
mod1 < lm(Rate_of_return ~ Average.fees, data = apra.ss)
mod1 <- lm(Rate_of_return ~ Average.fees, data = apra.ss)
summary(mod1)
mod2 <- lmer(Rate_of_return ~ Average.fees + (1 | Year), data = apra.ss)
summary(mod2)
mod3 <- lmer(Rate_of_return ~ Average.fees + Australian_Fixed_Interest + Australian_Equities + Cash + (1 | Year), data = apra.ss)
summary(mod3)
mod3 <- lmer(Rate_of_return ~ Average.fees + Australian_Fixed_Interest + Australian_Equities + Cash + I(Real.FUM/1e6)+ (1 | Year), data = apra.ss)
summary(mod3)
library (AER)
mod4 <- lmer(Rate_of_return ~ -1 + as.factor(Year)+Average.fees + Australian_Fixed_Interest + Australian_Equities + Cash + (1 | Year), data = apra.ss)
summary(mod4)
mod4 <- lmer(Rate_of_return ~ -1 + as.factor(Year)+Average.fees + Australian_Fixed_Interest + Australian_Equities + Cash | Cost.ration + as.factor(Year)+Average.fees + Australian_Fixed_Interest + Australian_Equities + Cash + (1 | Year), data = apra.ss)
mod4 <- lmer(Rate_of_return ~ -1 + as.factor(Year)+Average.fees + Australian_Fixed_Interest + Australian_Equities + Cash | Cost.ratio + as.factor(Year)+Average.fees + Australian_Fixed_Interest + Australian_Equities + Cash + (1 | Year), data = apra.ss)
mod4 <- lmer(Rate_of_return ~ -1 + as.factor(Year)+Average.fees + Australian_Fixed_Interest + Australian_Equities + Cash | Cost.ratio + as.factor(Year)+Average.fees + Australian_Fixed_Interest + Australian_Equities + Cash + (1 | Year), data = apra.ss)
mod4 <- ivreg(Rate_of_return ~ -1 + as.factor(Year)+Average.fees + Australian_Fixed_Interest + Australian_Equities + Cash | Cost.ratio + as.factor(Year)+Average.fees + Australian_Fixed_Interest + Australian_Equities + Cash + (1 | Year), data = apra.ss)
summary(mod4)
apra.ribbon <- apra.sr.full  %>% filter(!is.na(Average.fees)) %>%
group_by (Year) %>%
summarise(Median = median (Rate_of_return, na.rm = T),
Lower = quantile(Rate_of_return, 0.25),
Upper = quantile(Rate_of_return, 0.75) %>%
Upper = quantile(Rate_of_return, 0.75)
Upper = quantile(Rate_of_return, 0.75))
geom_ribbon(aes(ymin=Lower,ymax - Upper), fill = "orange", alpha = 0.5)
apra.ribbon <- apra.sr.full  %>% filter(!is.na(Average.fees)) %>%
group_by (Year) %>%
summarise(Median = median (Rate_of_return, na.rm = T),
Lower = quantile(Rate_of_return, 0.25),
Upper = quantile(Rate_of_return, 0.75)) %>%
ggplot(aes(x = Year)) +
geom_ribbon(aes(ymin=Lower,ymax - Upper), fill = "orange", alpha = 0.5)
apra.ribbon <- apra.sr.full  %>% filter(!is.na(Average.fees)) %>%
group_by (Year) %>%
summarise(Median = median (Rate_of_return),
Lower = quantile(Rate_of_return, 0.25),
Upper = quantile(Rate_of_return, 0.75)) %>%
ggplot(aes(x = Year)) +
geom_ribbon(aes(ymin=Lower,ymax - Upper), fill = "orange", alpha = 0.5)
apra.ribbon <- apra.sr.full  %>% filter(!is.na(Average.fees)) %>%
group_by (Year) %>%
summarise(Median = median (Rate_of_return),
Lower = quantile(Rate_of_return, 0.25),
Upper = quantile(Rate_of_return, 0.75)) %>%
ggplot(aes(x = Year)) +
geom_ribbon(aes(ymin=Lower,ymax - Upper), fill = "orange", alpha = 0.5)
apra.ribbon <- apra.sr.full  %>% filter(!is.na(Average.fees)) %>%
group_by (Year) %>%
summarise(Median = median (Rate_of_return),
Lower = quantile(Rate_of_return, 0.25),
Upper = quantile(Rate_of_return, 0.75)) %>%
ggplot(aes(x = Year)) +
geom_ribbon(aes(ymin=Lower,ymax - Upper), fill = "orange", alpha = 0.5)
apra.sr.full  %>% filter(!is.na(Average.fees)) %>%
apra.sr.full  %>% filter(!is.na(Average.fees)) %>%
group_by (Year) %>%
summarise(Median = median (Rate_of_return),
Lower = quantile(Rate_of_return, 0.25),
Upper = quantile(Rate_of_return, 0.75)) %>%
ggplot(aes(x = Year)) +
geom_ribbon(aes(ymin=Lower,ymax - Upper), fill = "orange", alpha = 0.5)
apra.sr.full %>% filter(!is.na(Average.fees)) %>%
group_by (Year) %>%
summarise(Median = median (Rate_of_return),
Lower = quantile(Rate_of_return, 0.25),
Upper = quantile(Rate_of_return, 0.75)) %>%
ggplot(aes(x = Year)) +
geom_ribbon(aes(ymin=Lower,ymax - Upper), fill = "orange", alpha = 0.5)
apra.sr.full %>% filter(!is.na(Average.fees)) %>%
apra.sr.full %>% filter(!is.na(Rate_of_return)) %>%
group_by (Year) %>%
summarise(Median = median (Rate_of_return),
Lower = quantile(Rate_of_return, 0.25),
Upper = quantile(Rate_of_return, 0.75)) %>%
ggplot(aes(x = Year)) +
geom_ribbon(aes(ymin=Lower,ymax - Upper), fill = "orange", alpha = 0.5)
geom_line(aes(y=Median))
apra.sr.full %>% filter(!is.na(Rate_of_return)) %>%
group_by (Year) %>%
summarise(Median = median (Rate_of_return),
Lower = quantile(Rate_of_return, 0.25),
Upper = quantile(Rate_of_return, 0.75)) %>%
ggplot(aes(x = Year)) +
geom_ribbon(aes(ymin=Lower,ymax=Upper), fill = "orange", alpha = 0.5) +
geom_line(aes(y=Median))
geom_boxplot()
apra.sr.full %>%
ggplot(aes(x = as.factor(Year), y = Rate_of_return)) +
geom_boxplot()
apra.sr.full %>%
ggplot(aes(x = as.factor(Year), y = Rate_of_return)) +
geom_violin()
apra.sr.full %>%
ggplot(aes(x = as.factor(Year), y = Rate_of_return)) +
geom_point()
apra.sr.full %>%
ggplot(aes(x = as.factor(Year), y = Rate_of_return)) +
geom_jitter(alpha = 0.4)
apra.sr.full %>%
ggplot(aes(x = as.factor(Year), y = Rate_of_return)) +
geom_jitter(alpha = 0.2)
library(ggmap)
melb <- get_map("Melbourne", zoom = 12)
ggmap(melb)
code <- geocode(location = c("205 Alma Road St Kilda East"))
melb <- get_map("Melbourne, Australia", zoom = 12)
ggmap(melb) + geom_point(aes(x = code$lon, y = code$lat), colour = "red")
code <- geocode(location = c("205 Alma Road St Kilda East", "20 Queen St Melbourne"))
melb <- get_googlemap("Melbourne, Australia", markers = code, path = code,zoom = 12)
ggmap(melb)
library(ggvis)
apra.sr.full %>% ggvis(x = ~as.factor(Year), y = ~Rate_of_return, fill = ~Fund_type) %>%
layer_points()
library(ggvis); library(dplyr)
apra.sr.full %>% ggvis(x = ~as.factor(Year), y = ~Rate_of_return, fill = ~Fund_type, size := input_slider(20, 200), opacity := input_slider(0,1)) %>%
layer_points()
library(dplyr)
apra.sr.full %>% ggvis(x = ~as.factor(Year), y = ~Rate_of_return, fill = ~Fund_type, size := input_slider(20, 200), opacity := input_slider(0,1)) %>%
layer_points()
apra.sr.full %>% ggvis(x = ~Year, y = ~Rate_of_return) %>%
layer_smooths(span = input_slider(min= 0.2, max = 1))
apra.sr.full %>% ggvis(x = ~Year, y = ~Rate_of_return) %>%
layer_smooths(span = input_slider(min= 0.2, max = 1))
